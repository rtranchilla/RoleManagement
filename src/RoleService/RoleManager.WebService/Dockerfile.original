#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base
WORKDIR /app
RUN sed -i -e "s|^MinProtocol = .*|MinProtocol = TLSv1.0|g" "/etc/ssl/openssl.cnf"
EXPOSE 80

FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
WORKDIR /src
COPY ["RoleManagement.Web/RoleManagement.Web.csproj", "RoleManagement.Web/"]
COPY ["RoleManagement.Commands/RoleManagement.Commands.csproj", "RoleManagement.Commands/"]
COPY ["RoleManagement.DataPersistence/RoleManagement.DataPersistence.csproj", "RoleManagement.DataPersistence/"]
COPY ["RoleManagement/RoleManagement.csproj", "RoleManagement/"]
COPY ["RoleManagement.Dto/RoleManagement.Dto.csproj", "RoleManagement.Dto/"]
COPY ["RoleManagement.MapperConfig/RoleManagement.MapperConfig.csproj", "RoleManagement.MapperConfig/"]
COPY ["RoleManagement.Queries/RoleManagement.Queries.csproj", "RoleManagement.Queries/"]
RUN dotnet restore "RoleManagement.Web/RoleManagement.Web.csproj"
COPY . .
WORKDIR "/src/RoleManagement.Web"
RUN dotnet build "RoleManagement.Web.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "RoleManagement.Web.csproj" -c Release -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "RoleManagement.Web.dll"]